{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/okinyimanu/Work/Challenge-1-Bank-of-Flatiron/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nfunction App() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await fetch('/transactions.json'); // Assuming db.json is in the public directory\n\n        const data = await response.json();\n        setTransactions(data.transactions);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui raised segment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment violet inverted\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"The Royal Bank of Flatiron\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(({\n        id,\n        date,\n        description,\n        category,\n        amount\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [date, \" - \", description, \" - \", category, \" - $\", amount]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccountContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/okinyimanu/Work/Challenge-1-Bank-of-Flatiron/src/components/App.js"],"names":["React","useState","useEffect","AccountContainer","App","transactions","setTransactions","fetchTransactions","response","fetch","data","json","error","console","map","id","date","description","category","amount"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,iBAAiB,GAAG,YAAY;AACpC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oBAAD,CAA5B,CADE,CACkD;;AACpD,cAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAL,QAAAA,eAAe,CAACI,IAAI,CAACL,YAAN,CAAf;AACD,OAJD,CAIE,OAAOO,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF,KARD;;AAUAL,IAAAA,iBAAiB;AAClB,GAZQ,EAYN,EAZM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBACGF,YAAY,CAACS,GAAb,CAAiB,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA,WAAZ;AAAyBC,QAAAA,QAAzB;AAAmCC,QAAAA;AAAnC,OAAD,kBAChB;AAAA,mBACGH,IADH,SACYC,WADZ,SAC4BC,QAD5B,UAC0CC,MAD1C;AAAA,SAASJ,EAAT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF,eAWE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAlCQX,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\nfunction App() {\n\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await fetch('/transactions.json'); // Assuming db.json is in the public directory\n        const data = await response.json();\n        setTransactions(data.transactions);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchTransactions();\n  }, []);\n\n\n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h2>The Royal Bank of Flatiron</h2>\n      </div>\n      <ul>\n        {transactions.map(({ id, date, description, category, amount }) => (\n          <li key={id}>\n            {date} - {description} - {category} - ${amount}\n          </li>\n        ))}\n      </ul>\n      <AccountContainer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}